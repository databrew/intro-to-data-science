[["index.html", "Working Title: the data science canon Module 1 Welcome", " Working Title: the data science canon Databrew 2021-03-27 Module 1 Welcome Welcome to Working Title, the data science canon by DataBrew "],["principles-of-data-science.html", "Module 2 Principles of data science 2.1 What is data science? 2.2 What is the data life cycle? 2.3 What is a pipeline? 2.4 Data science ‘in the wild’ 2.5 The reproducibility crisis", " Module 2 Principles of data science 2.1 What is data science? 2.2 What is the data life cycle? 2.3 What is a pipeline? 2.4 Data science ‘in the wild’ 2.5 The reproducibility crisis "],["visualizing-data.html", "Module 3 Visualizing data 3.1 Bad examples 3.2 Good exaples 3.3 Edward Tufte 3.4 Grammar of graphics 3.5 Design principles 3.6 Plots &amp; power", " Module 3 Visualizing data 3.1 Bad examples 3.2 Good exaples 3.3 Edward Tufte 3.4 Grammar of graphics 3.5 Design principles 3.6 Plots &amp; power The politics of graphics "],["writing-about-data.html", "Module 4 Writing about data", " Module 4 Writing about data "],["data-ethics.html", "Module 5 Data ethics", " Module 5 Data ethics "],["setting-up-rstudio.html", "Module 6 Setting up RStudio", " Module 6 Setting up RStudio "],["running-r-code.html", "Module 7 Running R code 7.1 Basic math 7.2 Operators", " Module 7 Running R code 7.1 Basic math 7.2 Operators "],["rstudio-workflows.html", "Module 8 RStudio workflows 8.1 Tour of RStudio 8.2 Scripts 8.3 Typical workflows", " Module 8 RStudio workflows 8.1 Tour of RStudio 8.2 Scripts 8.3 Typical workflows "],["objects-in-r.html", "Module 9 Objects in R 9.1 Variables 9.2 Vectors", " Module 9 Objects in R 9.1 Variables 9.2 Vectors "],["calling-functions.html", "Module 10 Calling functions", " Module 10 Calling functions "],["base-plots.html", "Module 11 Base plots", " Module 11 Base plots "],["packages.html", "Module 12 Packages", " Module 12 Packages "],["basics-of-ggplot.html", "Module 13 Basics of ggplot", " Module 13 Basics of ggplot "],["importing-data.html", "Module 14 Importing data 14.1 Working directories 14.2 Reading in data", " Module 14 Importing data 14.1 Working directories 14.2 Reading in data "],["dataframes.html", "Module 15 Dataframes 15.1 Exploration 15.2 Summarization", " Module 15 Dataframes 15.1 Exploration 15.2 Summarization "],["data-wrangling.html", "Module 16 Data wrangling 16.1 Data transformation 16.2 The tidyverse and tibbles 16.3 Transformation with dplyr", " Module 16 Data wrangling 16.1 Data transformation 16.1.1 Filtering 16.1.2 Grouping 16.1.3 Joining 16.2 The tidyverse and tibbles 16.3 Transformation with dplyr 16.3.1 Filtering 16.3.2 Grouping 16.3.3 Mutating "],["exploratory-data-analysis.html", "Module 17 Exploratory Data Analysis 17.1 Exploring distributions 17.2 Variable types &amp; statistics 17.3 Descriptive statistics", " Module 17 Exploratory Data Analysis 17.1 Exploring distributions 17.2 Variable types &amp; statistics 17.3 Descriptive statistics "],["significance-statistics.html", "Module 18 Significance statistics 18.1 Thinking about significance 18.2 Comparison tests 18.3 Correlation tests", " Module 18 Significance statistics 18.1 Thinking about significance 18.2 Comparison tests 18.3 Correlation tests "],["displaying-data.html", "Module 19 Displaying data 19.1 Tables 19.2 Base plots 19.3 ggplot", " Module 19 Displaying data 19.1 Tables 19.2 Base plots Advanced techniques 19.3 ggplot Advanced techniques "],["managing-project-files.html", "Module 20 Managing project files", " Module 20 Managing project files "],["formatting-your-own-data.html", "Module 21 Formatting your own data", " Module 21 Formatting your own data "],["reading-excel-files.html", "Module 22 Reading Excel files", " Module 22 Reading Excel files "],["reading-googlesheets.html", "Module 23 Reading GoogleSheets", " Module 23 Reading GoogleSheets "],["reading-online-data.html", "Module 24 Reading online data", " Module 24 Reading online data "],["joining-datasets.html", "Module 25 Joining datasets", " Module 25 Joining datasets "],["for-loops.html", "Module 26 for loops Learning goals Coming soon Tutorial video Basics Using for loops with data Using a for loop with more complex data Review assignment", " Module 26 for loops Learning goals What for loops are, and how to use them yourself How to use for loops for multi-pane plotting How to use for loops to achieve complex plots How to use for loops to summarize data efficiently Coming soon Instructor notes and answer keys (hidden from students) Tutorial video (coming soon!) Basics A for loop is a super powerful coding tool. In a for loop, R loops through a chunk of code for a set number of repititions. A super basic example: [1] 1 [1] 2 [1] 3 [1] 4 [1] 5 Here’s an example of a pretty useless for loop: [1] &quot;I&#39;m just repeating myself.&quot; [1] &quot;I&#39;m just repeating myself.&quot; [1] &quot;I&#39;m just repeating myself.&quot; [1] &quot;I&#39;m just repeating myself.&quot; [1] &quot;I&#39;m just repeating myself.&quot; This code is saying: - For each iteration of this loop, step to the next value in x (first example) or 1:5 (second example). - Store that value in an object i, - and run the code inside the curly brackets. - Repeat until the end of x. Look at the basic structure: - In thefor( ) parenthetical, you tell R what values to step through (x), and how to refer to the value in each iteration (i). - Within the curly brackets, you place the chunk of code you want to repeat. Another basic example, demonsrating that you can update a variable repeatedly in a loop. [1] 4 [1] 16 [1] 256 [1] 65536 [1] 4294967296 Another silly example: [1] &quot;Keri is pretty cool!&quot; [1] &quot;Deb is pretty cool!&quot; [1] &quot;Ken is pretty cool!&quot; Exercise 1 Use this space to practice the basics of for loop formatting. First, create a vector of names (add at least 3) Using the examples above as a guide, create a for loop that prints the same silly statement about each of these names. [1] &quot;Lady Gaga has cooties!&quot; [1] &quot;David Haskell has cooties!&quot; [1] &quot;Tom Cruise has cooties!&quot; Using for loops with data These silly examples above do a poor job of demonstrating how powerful a for loop can be. Multi-panel plots For example, a for loop can be a very efficient way of making multi-panel plots. Let’s use a for loop to get a quick overview of the variables included in the airquality dataset built into R. Ozone Solar.R Wind Temp Month Day 1 41 190 7.4 67 5 1 2 36 118 8.0 72 5 2 3 12 149 12.6 74 5 3 4 18 313 11.5 62 5 4 5 NA NA 14.3 56 5 5 6 28 NA 14.9 66 5 6 Looks like the first four columns would be interesting to plot. Tricky plot solutions for loops are also useful for plotting data in tricky ways. Let’s use a different built-in dataset, that shows the performance of various car make/models. mpg cyl disp hp drat wt qsec vs am gear carb Mazda RX4 21.0 6 160 110 3.90 2.620 16.46 0 1 4 4 Mazda RX4 Wag 21.0 6 160 110 3.90 2.875 17.02 0 1 4 4 Datsun 710 22.8 4 108 93 3.85 2.320 18.61 1 1 4 1 Hornet 4 Drive 21.4 6 258 110 3.08 3.215 19.44 1 0 3 1 Hornet Sportabout 18.7 8 360 175 3.15 3.440 17.02 0 0 3 2 Valiant 18.1 6 225 105 2.76 3.460 20.22 1 0 3 1 Let’s say we want to see how gas mileage is affected by the number of cylinders a car has. It would be nice to create a plot that shows the raw data as well as the mean mileage for each cylinder number. [1] 6 4 8 Exercise 2 Now try to do something similar on your own with the airquality dataset. Use for loops to create a plot with Month on the x axis and Temperature on the y axis. On this plot, depict all the temperatures recorded in each month in the color grey, then superimpose the mean temperature for each month. We will provide the empty plot, you provide the for loop: Using a for loop with more complex data Here’s another good example of the power of a good for loop. First, read in some cool data. year month day_of_month day_of_year year_dec frac_of_year CO2 1 1974 5 26 145.4890 1974.399 0.3986 332.95 2 1974 6 2 152.4970 1974.418 0.4178 332.35 3 1974 6 9 159.5050 1974.437 0.4370 332.20 4 1974 6 16 166.5130 1974.456 0.4562 332.37 5 1974 6 23 173.4845 1974.475 0.4753 331.73 6 1974 6 30 180.4925 1974.495 0.4945 331.68 This is the famous Keeling Curve dataset: long-term monitoring of atmospheric CO2 measured at a volcanic observatory in Hawaii. Try plotting the Keeling Curve: There are some erroneous data points! We clearly can’t have negative CO2 values. Let’s remove those and try again: What’s the deal with those squiggles? Let’s investigate! Let’s look at the data a different way: by focusing in on a single year. year month day_of_month day_of_year year_dec frac_of_year CO2 816 1990 1 7 6.4970 1990.018 0.0178 353.58 817 1990 1 14 13.5050 1990.037 0.0370 353.99 818 1990 1 21 20.5130 1990.056 0.0562 353.92 819 1990 1 28 27.4845 1990.075 0.0753 354.39 820 1990 2 4 34.4925 1990.094 0.0945 355.04 821 1990 2 11 41.5005 1990.114 0.1137 355.09 [1] 354.4538 [1] -0.87384615 -0.46384615 -0.53384615 -0.06384615 0.58615385 0.63615385 [7] 0.96615385 0.72615385 1.13615385 1.33615385 1.08615385 1.67615385 [13] 1.81615385 1.71615385 1.77615385 2.41615385 2.50615385 3.24615385 [19] 2.79615385 2.87615385 2.92615385 2.52615385 1.79615385 1.72615385 [25] 1.33615385 1.76615385 0.53615385 -0.16384615 -0.08384615 -0.46384615 [31] -1.28384615 -0.99384615 -1.37384615 -2.65384615 -3.29384615 -3.59384615 [37] -2.70384615 -2.99384615 -3.05384615 -2.91384615 -2.88384615 -2.72384615 [43] -2.05384615 -1.74384615 -1.30384615 -1.00384615 -0.76384615 -0.55384615 [49] 0.01615385 -0.11384615 0.37615385 0.34615385 NA But this only shows one year of data! How can we include the seasonal squiggle from other years? Let’s use a for loop! OK – let’s redo that graph and add a for loop into the mix: [1] &quot;1974&quot; &quot;1975&quot; &quot;1976&quot; &quot;1977&quot; &quot;1978&quot; &quot;1979&quot; &quot;1980&quot; &quot;1981&quot; &quot;1982&quot; &quot;1983&quot; [11] &quot;1984&quot; &quot;1985&quot; &quot;1986&quot; &quot;1987&quot; &quot;1988&quot; &quot;1989&quot; &quot;1990&quot; &quot;1991&quot; &quot;1992&quot; &quot;1993&quot; [21] &quot;1994&quot; &quot;1995&quot; &quot;1996&quot; &quot;1997&quot; &quot;1998&quot; &quot;1999&quot; &quot;2000&quot; &quot;2001&quot; &quot;2002&quot; &quot;2003&quot; [31] &quot;2004&quot; &quot;2005&quot; &quot;2006&quot; &quot;2007&quot; &quot;2008&quot; &quot;2009&quot; &quot;2010&quot; &quot;2011&quot; &quot;2012&quot; &quot;2013&quot; [41] &quot;2014&quot; &quot;2015&quot; &quot;2016&quot; &quot;2017&quot; &quot;2018&quot; &quot;2019&quot; &quot;2020&quot; &quot;2021&quot; NA Beautiful! So how do you interpret this graph? Why does the squiggle happen every year? Review assignment First, read in and format some other cool data. The code for doing so is provided for you here: This dataset, freely available from World Bank, shows the renewable electricity output for various countries, presented as a percentage of the nation’s total electricity output. They provide this data as a time series. 26.0.1 Summarize columns with a for loop Task 1: Use a for loop to find the change in renewable energy output for each nation in the dataset between 1990 and 2015. Print the difference for each nation in the console. [1] &quot;year&quot; &quot;World&quot; &quot;Australia&quot; &quot;Canada&quot; [5] &quot;China&quot; &quot;Denmark&quot; &quot;India&quot; &quot;Japan&quot; [9] &quot;New_Zealand&quot; &quot;Sweden&quot; &quot;Switzerland&quot; &quot;United_Kingdom&quot; [13] &quot;United_States&quot; [1] &quot;World : 3% change.&quot; [1] &quot;Australia : 4% change.&quot; [1] &quot;Canada : 1% change.&quot; [1] &quot;China : 4% change.&quot; [1] &quot;Denmark : 62% change.&quot; [1] &quot;India : -9% change.&quot; [1] &quot;Japan : 5% change.&quot; [1] &quot;New_Zealand : 0% change.&quot; [1] &quot;Sweden : 12% change.&quot; [1] &quot;Switzerland : 7% change.&quot; [1] &quot;United_Kingdom : 23% change.&quot; [1] &quot;United_States : 2% change.&quot; Task 2: Re-do this loop, but instead of printing the differences to the console, save them in a vector. [1] &quot;World : 3% change.&quot; [1] &quot;Australia : 4% change.&quot; [1] &quot;Canada : 1% change.&quot; [1] &quot;China : 4% change.&quot; [1] &quot;Denmark : 62% change.&quot; [1] &quot;India : -9% change.&quot; [1] &quot;Japan : 5% change.&quot; [1] &quot;New_Zealand : 0% change.&quot; [1] &quot;Sweden : 12% change.&quot; [1] &quot;Switzerland : 7% change.&quot; [1] &quot;United_Kingdom : 23% change.&quot; [1] &quot;United_States : 2% change.&quot; [1] 3.49241703 3.98181045 0.63273122 3.51887728 62.33064943 -9.14624362 [7] 4.73004321 0.07524008 12.26263811 7.21543884 23.01128298 1.69994636 Multi-pane plots with for loops Practice with a single plot Task 3: First, get your bearings by figuring out how to use the df dataset to plot the time series for the United States, for the years 1990 - 2015. Label the x axis “Year” and the y axis “% Renewable”. Include the full name of the county as the main title for the plot. year World Australia Canada China Denmark India Japan 1 1990 19.36204 9.656031 62.37872 20.40794 3.175275 24.48929 11.254738 2 1991 19.23357 10.598201 61.41041 18.47113 2.892325 22.80740 11.856735 3 1992 19.15840 10.066865 61.67921 17.58468 4.398464 20.75265 10.162888 4 1993 19.78795 10.549144 61.72233 18.12526 4.730088 19.55881 11.454528 5 1994 19.53812 10.194474 60.40045 18.08844 4.295431 21.21910 7.993026 6 1995 19.83536 9.624143 61.00410 19.21414 5.035639 17.26054 9.416323 New_Zealand Sweden Switzerland United_Kingdom United_States 1 80.00620 51.00011 54.98254 1.828767 11.528647 2 77.18945 44.30088 57.16370 1.656439 10.757414 3 72.58771 52.33321 56.90938 2.005662 9.916110 4 77.02407 52.92433 59.57279 1.777626 10.484326 5 82.05216 43.02873 60.57322 2.139842 9.747236 6 83.85281 47.57878 57.42996 2.066535 10.801085 Now loop it! Task 4: Use that code as the foundation for building up a for loop that displays the same time series for every country in the dataset on a multi-pane graph that with 4 rows and 3 columns. Now loop it differently! Task 5: Now try a different presentation. Instead of producing 12 different plots, superimpose the time series for each country on the same single plot. To add some flare, highlight the USA curve by coloring it red and making it thicker. "],["writing-functions.html", "Module 27 Writing functions", " Module 27 Writing functions "],["working-with-text.html", "Module 28 Working with text", " Module 28 Working with text "],["working-with-dates-times.html", "Module 29 Working with dates &amp; times", " Module 29 Working with dates &amp; times "],["working-with-factors.html", "Module 30 Working with factors", " Module 30 Working with factors "],["cleaning-messy-data.html", "Module 31 Cleaning messy data", " Module 31 Cleaning messy data "],["matrices-lists.html", "Module 32 Matrices &amp; lists", " Module 32 Matrices &amp; lists "],["pipes.html", "Module 33 Pipes", " Module 33 Pipes "],["exporting-data-plots.html", "Module 34 Exporting data &amp; plots", " Module 34 Exporting data &amp; plots "],["intro-to-shiny-apps.html", "Module 35 Intro to Shiny apps", " Module 35 Intro to Shiny apps "],["shiny-dashboards.html", "Module 36 Shiny dashboards", " Module 36 Shiny dashboards "],["data-entry-apps.html", "Module 37 Data entry apps", " Module 37 Data entry apps "],["introduction.html", "Module 38 Introduction 38.1 What 38.2 Why 38.3 When 38.4 When not", " Module 38 Introduction 38.1 What 38.2 Why 38.3 When 38.4 When not "],["platforms.html", "Module 39 Platforms 39.1 PostgreSQL 39.2 mySQL 39.3 SQLite", " Module 39 Platforms 39.1 PostgreSQL 39.2 mySQL 39.3 SQLite "],["alternatives.html", "Module 40 Alternatives 40.1 NoSQL", " Module 40 Alternatives 40.1 NoSQL "],["practices.html", "Module 41 Practices", " Module 41 Practices Spinning up a local DB "],["r-markdown.html", "Module 42 R Markdown", " Module 42 R Markdown "],["reproducible-research.html", "Module 43 Reproducible research", " Module 43 Reproducible research "],["automated-reporting.html", "Module 44 Automated reporting", " Module 44 Automated reporting "],["formatting-standards.html", "Module 45 Formatting standards 45.1 Tables 45.2 Figures 45.3 Captions", " Module 45 Formatting standards 45.1 Tables 45.2 Figures 45.3 Captions "],["what-is-version-control.html", "Module 46 What is version control?", " Module 46 What is version control? "],["what-is-git.html", "Module 47 What is Git? 47.1 Repositories 47.2 Github", " Module 47 What is Git? 47.1 Repositories 47.2 Github "],["standard-git-operations.html", "Module 48 Standard git operations", " Module 48 Standard git operations "],["a-git-workflow.html", "Module 49 A git workflow", " Module 49 A git workflow "],["other-git-platforms.html", "Module 50 Other git platforms", " Module 50 Other git platforms "],["types-of-writing.html", "Module 51 Types of writing 51.1 Grant proposals 51.2 Reports and publications 51.3 Fundraising 51.4 Press releases", " Module 51 Types of writing 51.1 Grant proposals 51.2 Reports and publications 51.3 Fundraising 51.4 Press releases "],["elements-of-style.html", "Module 52 Elements of style", " Module 52 Elements of style "],["sections-of-a-report.html", "Module 53 Sections of a report 53.1 Abstract 53.2 Introduction 53.3 Methods 53.4 Results 53.5 Discussion 53.6 Other elements", " Module 53 Sections of a report 53.1 Abstract 53.2 Introduction 53.3 Methods 53.4 Results 53.5 Discussion 53.6 Other elements 53.6.1 Acknowledgments 53.6.2 Literature Cited 53.6.3 Tables 53.6.4 Figures 53.6.5 Supplementary Materials "],["mapping.html", "Module 54 Mapping", " Module 54 Mapping "],["geographic-computing-gis.html", "Module 55 Geographic computing &amp; GIS", " Module 55 Geographic computing &amp; GIS "],["statistical-modeling.html", "Module 56 Statistical modeling", " Module 56 Statistical modeling "],["apply-family.html", "Module 57 Apply family", " Module 57 Apply family "],["iterative-statistics.html", "Module 58 Iterative statistics", " Module 58 Iterative statistics "],["iterative-simulations.html", "Module 59 Iterative simulations", " Module 59 Iterative simulations "],["image-analysis.html", "Module 60 Image analysis", " Module 60 Image analysis "],["machine-learning.html", "Module 61 Machine learning", " Module 61 Machine learning "],["template.html", "Module 62 Template Learning goals Tutorial video Basics Review assignment 62.1 Other Resources", " Module 62 Template Learning goals Item 1 Item 2 Item 3 Tutorial video Bangarang - Crew Briefing from Luke Padgett on Vimeo. Basics Exercise 1 Review assignment Introduce data Introduce task(s) 62.1 Other Resources https://desiree.rbind.io/post/2020/learnr-iframes/ https://rstudio.github.io/learnr/ "],["references.html", "References", " References "]]
